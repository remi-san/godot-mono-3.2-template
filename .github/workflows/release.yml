name: "Release"
on:
  push:
    tags:
      - 'v*'

env:
  GAME_SUBDIRECTORY: "game"
  GODOT_VERSION: "3.2.3"
  GODOT_VERSION_MODIFIER: "stable.mono"
  EXPORT_NAME: "Game"
  CUSTOM_ICON: "true"
  ITCHIO_USERNAME: ""
  ITCHIO_GAME: ""

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version-without-v }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Get version name
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version-without-v }}
          body: ""
          draft: false
          prerelease: false

  export:
    name: Export
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        include:
          - platform: windows
            extension: .exe
            type: executable
          - platform: mac
            extension: .zip
            type: archive
          - platform: linux
            extension: .x86_64
            type: executable
          - platform: html
            extension: .html
            type: executable
    container:
      image: barichello/godot-ci:mono-3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup WINE and rcedit for windows build
        if: ${{ matrix.platform == 'windows' && env.CUSTOM_ICON == 'true' }}
        run: |
          dpkg --add-architecture i386 && apt-get update && apt-get install -y wine
          chown root:root -R ~
          wget https://github.com/electron/rcedit/releases/download/v1.1.1/rcedit-x64.exe && mkdir -v -p ~/.local/share/rcedit && mv rcedit-x64.exe ~/.local/share/rcedit/ && chmod +x ~/.local/share/rcedit/rcedit-x64.exe
          mkdir dummy && godot -v --path dummy -q
          echo 'export/windows/wine = "/usr/bin/wine64"' >> ~/.config/godot/editor_settings-3.tres && echo "export/windows/rcedit = \"$(realpath ~/.local/share/rcedit/rcedit-x64.exe)\"" >> ~/.config/godot/editor_settings-3.tres
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.${GODOT_VERSION_MODIFIER} ~/.local/share/godot/templates/${GODOT_VERSION}.${GODOT_VERSION_MODIFIER}
      - name: File information setup
        id: file-information
        env:
          EXPORT_PLATFORM: ${{ matrix.platform }}
          FILE_EXTENSION: ${{ matrix.extension }}
        run: |
          if [ "${EXPORT_PLATFORM}" = "html" ]
          then
              echo "::set-output name=name::index${FILE_EXTENSION}"
          else
              echo "::set-output name=name::${EXPORT_NAME}${FILE_EXTENSION}"
          fi
      - name: Build
        id: build
        env:
          EXPORT_PLATFORM: ${{ matrix.platform }}
          EXPORT_FILENAME: ${{ steps.file-information.outputs.name }}
        run: |
          buildPath="${GITHUB_WORKSPACE}/build/${EXPORT_PLATFORM}"
          filePath="${buildPath}/${EXPORT_FILENAME}"
          mkdir -v -p "${buildPath}"
          godot -v --path "./$GAME_SUBDIRECTORY" --export "${EXPORT_PLATFORM}" "${filePath}"
          echo "::set-output name=build_directory::${buildPath}"
          echo "::set-output name=build_file::${filePath}"
      - name: Archive
        id: archive
        env:
          EXPORT_PLATFORM: ${{ matrix.platform }}
          BUILD_DIRECTORY: ${{ steps.build.outputs.build_directory }}
          BUILD_FILE: ${{ steps.build.outputs.build_file }}
          FILE_TYPE: ${{ matrix.type }}
          VERSION: ${{ needs.release.outputs.version }}
        run: |
          rootBuildPath="${GITHUB_WORKSPACE}/build"
          formattedExportName="$( echo ${EXPORT_NAME} | sed 's/./\L&/g' | sed 's/ /-/g' )"
          filename="${formattedExportName}-${EXPORT_PLATFORM}-v${VERSION}.zip"
          filePath="${rootBuildPath}/${filename}"
          if [ "${FILE_TYPE}" = "executable" ]
          then
              cd "${BUILD_DIRECTORY}" && zip -r "${filePath}" *
          else
              mv "${BUILD_FILE}" "${filePath}"
          fi
          echo "::set-output name=path::${filePath}"
          echo "::set-output name=filename::${filename}"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: ${{ steps.archive.outputs.path }}
          asset_name: ${{ steps.archive.outputs.filename }}
          asset_content_type: application/zip
      - name: Upload on itch
        env:
          CHANNEL: ${{ matrix.platform }}
          PACKAGE: ${{ steps.archive.outputs.path }}
          VERSION: ${{ needs.release.outputs.version }}
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        if: ${{ env.BUTLER_API_KEY != '' && env.ITCHIO_USERNAME != '' && env.ITCHIO_GAME != '' }}
        run: butler push --userversion=${VERSION} "${PACKAGE}" ${ITCHIO_USERNAME}/${ITCHIO_GAME}:${CHANNEL}
